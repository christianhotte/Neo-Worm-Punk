//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.0
//     from Assets/Settings/HotteInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @HotteInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @HotteInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""HotteInputActions"",
    ""maps"": [
        {
            ""name"": ""XRI Head"",
            ""id"": ""09ff3ccc-21b4-4346-a3a2-7c978b5af892"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""1a9029f8-7a46-46b9-9eff-e9ae8365f611"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""aed87fe6-2b01-4dd2-a8fa-195578fd8158"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cff1f981-6e1f-4e2c-a90c-715a0ea2e80e"",
                    ""path"": ""<XRHMD>/centerEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2017383-a3f6-4c46-acb1-012b8eece9cc"",
                    ""path"": ""<XRHMD>/centerEyeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI LeftHand"",
            ""id"": ""5fe596f9-1b7b-49b7-80a7-3b5195caf74d"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""83a7af0b-87e3-42c3-a909-95fbf8091e4f"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""5311c63b-492e-4dae-bee4-d4285114f7d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""cb6b7130-2bac-4ef7-abe4-6991ae7d419d"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""d20fc51c-7916-43a7-8b03-706049966aea"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""664a62b0-e178-421d-b3f8-014eec01591d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""61466a56-4ee4-47b1-aa6a-4806de1de5f2"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""afdcfbff-e241-4fdd-a6d1-23b0bf273360"",
                    ""path"": ""<XRController>{LeftHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""ed03d944-4c09-4c38-8b68-5c844e18ca7c"",
                    ""path"": ""<XRController>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""c98fc8c8-7fc6-4909-89b6-c5b7568e7275"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""14aeff85-d719-43ff-a124-b1cd7ca8686d"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""abf752ec-feee-4d51-b530-f0870f48acc9"",
                    ""path"": ""<XRController>{LeftHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""6580b669-0651-401c-9779-85ef22689130"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""ae101942-9eaa-4c53-a388-cafc3fd89bdf"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""acdf9550-5529-4ff7-8558-73ecdf0d75bd"",
                    ""path"": ""<XRController>{LeftHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97a0351f-659b-482a-8fa0-19015ccd055e"",
                    ""path"": ""<XRController>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2f67e6b-1646-4749-815b-da6d7e3a13d0"",
                    ""path"": ""<XRController>{LeftHand}/joystickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI LeftHand Interaction"",
            ""id"": ""7a5e7537-cc30-4eb1-a544-6946baa8f3eb"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""655e4b97-af3e-4ea6-9089-656856b46cbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Value"",
                    ""type"": ""Value"",
                    ""id"": ""cda3da7a-36fb-45ff-946b-30928ea18303"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""5ff6a158-b893-4df1-8d17-7c5fdf085581"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Activate Value"",
                    ""type"": ""Value"",
                    ""id"": ""3e636aee-58d1-4507-b012-d64f6541234a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Press"",
                    ""type"": ""Button"",
                    ""id"": ""827da481-284c-434c-bbda-d82786f9f23c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI Press Value"",
                    ""type"": ""Value"",
                    ""id"": ""04ae735d-51ce-40ce-9a8e-7716dbdcbe9c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""68edf0a3-b0e0-43a5-a90b-1e49d7def247"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Translate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""1aa8f613-e33b-4ae6-a42c-83f9e34dd64e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""1a4958ec-1657-42f1-ab7d-318853df9101"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Value"",
                    ""id"": ""edc28578-16c0-4614-ae1a-454d6f3d41cc"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AButton"",
                    ""type"": ""Button"",
                    ""id"": ""71eec4c2-1cf2-4b24-919d-d4de886a38b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BButton"",
                    ""type"": ""Button"",
                    ""id"": ""20189862-d45e-4ace-9163-e48b6f72e35c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""type"": ""Value"",
                    ""id"": ""cd85dd63-40fb-4210-9e6a-575584df213f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""13a2e3b3-582b-4b42-ad94-5a39881e0ac3"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fba7af9-a4da-4d54-ad5b-d906fe17c809"",
                    ""path"": ""<XRController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31e5fac2-bd57-4951-9b01-c348ac267f90"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""AButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""489bd5cb-65f6-4b20-9113-1711f045751f"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""BButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e826d5dc-7e74-41a3-85d0-550f083ca780"",
                    ""path"": ""<XRController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6990070b-7620-455a-9707-538a9d42a909"",
                    ""path"": ""<XRController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29484a3e-efc9-44f8-89d6-f1ee4bdace1e"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8628a72-edb5-4972-9e4c-7d85237b405f"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Activate Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""461523ed-2467-470c-bb54-03a3cb1977d9"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1727d46-cef6-4cad-ba9a-b1277d5c9a12"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5282012-ae50-4b87-aba8-53f9662bafa5"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(y=0),StickDeadzone"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""419fed94-d62d-404c-8fe7-a80bb13568ba"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0),StickDeadzone"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27479b83-2362-4060-b436-5b69c65c7fc4"",
                    ""path"": ""<XRController>{LeftHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI RightHand"",
            ""id"": ""7960f8ef-2bf3-4281-aecc-4c03809d6c8c"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""c4990d70-7b8a-4ce1-b03c-da86716b8352"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""ee6bf5bf-bb0a-4a50-8327-cb654b19e298"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""167ea203-5bfb-4d74-bde9-8026b7483102"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""57b2a1b4-3290-46d6-ac07-4854ee8f91b1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""84e51e1c-1b95-4f3e-a61f-29da6c1f0816"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""3722d501-eb80-4f61-9361-08a5ea7a1394"",
                    ""path"": ""<XRController>{RightHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""2e6ad191-d5aa-4919-aac6-295c83387a72"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""b9ecb60d-341e-47cf-b50a-41d5815af8b0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""74e968f1-ad08-4a82-a68d-764517faecef"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""9717e367-64a4-440a-9974-1e641d753eb2"",
                    ""path"": ""<XRController>{RightHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""0794a41d-29ef-48ec-a452-6b7de29b52fa"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""3ef0a781-60c5-48bc-a584-f95553f8ae0a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6011e1e6-b2dd-4cb1-8da5-29b03868f2c5"",
                    ""path"": ""<XRController>{RightHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03ccbaec-eeca-4fc4-8281-ee1758b4eb9b"",
                    ""path"": ""<XRController>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI RightHand Interaction"",
            ""id"": ""461bce25-7762-40c5-b639-f190649be6d6"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""6fe34c99-de06-4800-98a5-7a1faa93f20c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Value"",
                    ""type"": ""Value"",
                    ""id"": ""cce0fd71-f0f9-4a1b-842e-27dde5ab6ad5"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""6856363d-6dfd-4e97-a6de-a51c5f359694"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Activate Value"",
                    ""type"": ""Value"",
                    ""id"": ""c1d4e497-0218-4492-8af8-03bd41380f7f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Press"",
                    ""type"": ""Button"",
                    ""id"": ""4bc912f3-c84f-46db-a701-e64fdfd23fab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI Press Value"",
                    ""type"": ""Value"",
                    ""id"": ""4172c5bf-cc79-4724-9219-ecd636ac5123"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""afecaf32-a84e-4223-a77b-c44f5450807c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Translate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""02b16ffa-7452-4f7e-978f-4a1c9c87d6d3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""c7fc381e-d746-486d-8417-e49dbe9df290"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Value"",
                    ""id"": ""290db458-a864-4c61-8775-e841bc0045b7"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AButton"",
                    ""type"": ""Button"",
                    ""id"": ""9e116a63-6710-41a3-8929-2c51a1b974df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BButton"",
                    ""type"": ""Button"",
                    ""id"": ""08ac367d-dd0a-4597-b1c6-a809010e2cdc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""type"": ""Value"",
                    ""id"": ""dde5967b-e496-4e85-929d-6cae67ab1421"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""46cc7e7d-32b5-41f8-bedc-6a0e7af07c02"",
                    ""path"": ""<XRController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb4aa073-1232-4dda-b38c-6d80f5638af9"",
                    ""path"": ""<XRController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdecfe96-041f-4094-879a-73730a0d9367"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""AButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46398b7e-f7f3-4586-8ddb-1d9abfd02fd1"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""BButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1929edc-7fcd-49b2-bd18-65b45ca1d0b9"",
                    ""path"": ""<XRController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38fd2049-1461-4ef3-935e-c8af577dbf0e"",
                    ""path"": ""<XRController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e2824e6-536a-451f-8b23-e18e2f49f64d"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""074a0a2a-b9ce-4708-bcee-53b03887dfba"",
                    ""path"": ""<XRController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Activate Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e3c65dd-3612-4ddb-b8c8-250375f74459"",
                    ""path"": ""<XRController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57b7d303-5ef1-4021-9c6e-f9a6beec7131"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53316b2f-0342-48f0-81eb-5d4e99b26e7e"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(y=0),StickDeadzone"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c55ab9f1-cc7f-4165-879f-f0d5c6eee41e"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0),StickDeadzone"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdc47e5f-7104-45b7-8bbf-3f6ec012c4f0"",
                    ""path"": ""<XRController>{RightHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI Generic Interaction"",
            ""id"": ""e239ddb2-3558-415e-9145-6392d0ea8288"",
            ""actions"": [
                {
                    ""name"": ""RightStickPress"",
                    ""type"": ""Button"",
                    ""id"": ""72412fa1-0b62-4598-8e4c-1f1aaac39552"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightStick"",
                    ""type"": ""Value"",
                    ""id"": ""459fb52d-950f-4b18-bb8a-a9b183ebd88e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5122a146-7a9b-41a8-8ac7-f8e684f52e91"",
                    ""path"": ""<XRController>{RightHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""RightStickPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c3b611b-5809-4868-8903-ac52dae46cef"",
                    ""path"": ""<XRController>{RightHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI UI"",
            ""id"": ""586c057d-1336-4f7b-8055-a8c605531162"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b2bd078d-72ef-4422-b4ca-2df85dd65648"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""0d46c824-cc92-41f7-bbb8-b30bafd3d5b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""438e8982-ba21-491e-b55c-fb158b8c8ca6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b48c6e08-d1c5-405b-a5c8-f4603dd443cd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7d3ccc74-8f7c-4d2d-8bf6-330d029f2975"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""eb645570-fe2b-438d-9224-fbde476c758c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f5b4bbef-09af-4fdf-9a6d-00a28274bb54"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8540e6fb-7aab-43e6-8379-52a2d28b0c37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1f8dc21d-32fd-4be1-aeea-176900562ecc"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd96b198-e993-4ea9-b6a4-81e6c3705353"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a554832-c53b-4d2b-9418-27e3a6c52520"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23acdbfc-b0d1-4f03-8077-3cbf6ac8f584"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24291e16-6509-4e9d-9755-2ee7eba30ac3"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5814e6c-97de-46f0-bd55-0990c7505d2f"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""128d511f-d7bb-4642-bdbf-f58b073d32c5"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4dd555c2-0900-47fe-94d4-2d2f7d814124"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""08cc11cd-a417-406c-a9ff-6fcc7d17e788"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""acb477b7-ab43-451d-8db1-84b1b2ee38f8"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3728c84e-5353-48cd-8f04-ffd8a7fd87c3"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6ea69cae-60fb-47b9-8311-fcc0f0aaaa6f"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""690ea6ec-5f19-408a-a9f3-a1e1e3c76a06"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""13c8d86a-73f2-4461-94df-6801e21ffda3"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d55ecf67-5583-4a1c-8967-cdf5363c74ad"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8a1f2527-8476-4861-8fe4-5d6599f7c0d7"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""50bbd616-8721-4c95-865d-48be0da76e6f"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0f3bf40c-0429-4080-9482-fcc8e5546d32"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""401f7450-1d5c-491e-9b3f-1e241f91614c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f9ffb8bb-47a1-4b3d-8c4b-03766c90cc46"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6bc9ca5a-867a-4071-aa92-beba3dedbfbd"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""57697f3c-49bf-4197-ad20-41c1a8a24244"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0ed36f26-8098-498a-b342-824ea2e6b3b0"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""a00c2fa1-9b17-4de9-b020-44e81157f441"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8c1736f8-bf64-47b9-b3b8-7fa494348fe8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8d9a9374-c0a9-4da5-8d7d-b5a19d022044"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""93735d04-d6f6-4c1b-b199-a06cf54ef319"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9a1325e7-1496-4d61-b3e4-bcfe5a988536"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5e363859-da71-4c62-afd3-475ef504255c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""47d39476-4573-4a15-8632-a64ae2198d36"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""922d8a82-7f42-4194-8279-155b65682d77"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3ab9e1ea-80a5-4ca9-8755-a1ec8e06f595"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e791c583-d7a0-4a28-ba89-b5dbeb15009b"",
                    ""path"": ""<XRController>{LeftHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc8a4072-2198-432e-a3c9-a33b350c0b6a"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed3c1f61-84a1-41c3-8dd4-44af70117629"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f0b3e96-4792-433a-98a5-53edb558a734"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eaa3e07d-74fa-4137-86d8-5bf13a2abc29"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f82cc06d-6a6e-46bb-b9ea-679d556838eb"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2d560a0-9a4f-4eaa-bcfd-13ad5f6edb47"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2794d51-0872-49f6-8203-1fd7d8b2f893"",
                    ""path"": ""<Touchscreen>/touch*/click"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f8026bd-1d9e-4dc1-9349-d545d7227d34"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc82be30-c78b-401a-9386-c48517434585"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Spectator"",
            ""id"": ""a102dcbf-a50b-45da-9224-09c30191cc5d"",
            ""actions"": [
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""Value"",
                    ""id"": ""f0c8e053-65ef-445b-b53b-9872bbe73851"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""1d972934-d9e5-49df-8c2a-5e31df9599a3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftMouseButton"",
                    ""type"": ""Button"",
                    ""id"": ""106b5e99-f8af-4d39-8ee6-5c53a0096276"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""da3b4c87-6604-4b53-8ea6-ccdc669386d7"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ac24ec2-c06a-4ecd-a4e7-5327eb2127ab"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db82f748-4aa7-4237-b770-37f5fbbb6ddd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""LeftMouseButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Generic XR Controller"",
            ""bindingGroup"": ""Generic XR Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<WMRHMD>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Continuous Move"",
            ""bindingGroup"": ""Continuous Move"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Noncontinuous Move"",
            ""bindingGroup"": ""Noncontinuous Move"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // XRI Head
        m_XRIHead = asset.FindActionMap("XRI Head", throwIfNotFound: true);
        m_XRIHead_Position = m_XRIHead.FindAction("Position", throwIfNotFound: true);
        m_XRIHead_Rotation = m_XRIHead.FindAction("Rotation", throwIfNotFound: true);
        // XRI LeftHand
        m_XRILeftHand = asset.FindActionMap("XRI LeftHand", throwIfNotFound: true);
        m_XRILeftHand_Position = m_XRILeftHand.FindAction("Position", throwIfNotFound: true);
        m_XRILeftHand_Menu = m_XRILeftHand.FindAction("Menu", throwIfNotFound: true);
        m_XRILeftHand_Rotation = m_XRILeftHand.FindAction("Rotation", throwIfNotFound: true);
        m_XRILeftHand_TrackingState = m_XRILeftHand.FindAction("Tracking State", throwIfNotFound: true);
        m_XRILeftHand_HapticDevice = m_XRILeftHand.FindAction("Haptic Device", throwIfNotFound: true);
        // XRI LeftHand Interaction
        m_XRILeftHandInteraction = asset.FindActionMap("XRI LeftHand Interaction", throwIfNotFound: true);
        m_XRILeftHandInteraction_Select = m_XRILeftHandInteraction.FindAction("Select", throwIfNotFound: true);
        m_XRILeftHandInteraction_SelectValue = m_XRILeftHandInteraction.FindAction("Select Value", throwIfNotFound: true);
        m_XRILeftHandInteraction_Activate = m_XRILeftHandInteraction.FindAction("Activate", throwIfNotFound: true);
        m_XRILeftHandInteraction_ActivateValue = m_XRILeftHandInteraction.FindAction("Activate Value", throwIfNotFound: true);
        m_XRILeftHandInteraction_UIPress = m_XRILeftHandInteraction.FindAction("UI Press", throwIfNotFound: true);
        m_XRILeftHandInteraction_UIPressValue = m_XRILeftHandInteraction.FindAction("UI Press Value", throwIfNotFound: true);
        m_XRILeftHandInteraction_RotateAnchor = m_XRILeftHandInteraction.FindAction("Rotate Anchor", throwIfNotFound: true);
        m_XRILeftHandInteraction_TranslateAnchor = m_XRILeftHandInteraction.FindAction("Translate Anchor", throwIfNotFound: true);
        m_XRILeftHandInteraction_Trigger = m_XRILeftHandInteraction.FindAction("Trigger", throwIfNotFound: true);
        m_XRILeftHandInteraction_Grip = m_XRILeftHandInteraction.FindAction("Grip", throwIfNotFound: true);
        m_XRILeftHandInteraction_AButton = m_XRILeftHandInteraction.FindAction("AButton", throwIfNotFound: true);
        m_XRILeftHandInteraction_BButton = m_XRILeftHandInteraction.FindAction("BButton", throwIfNotFound: true);
        m_XRILeftHandInteraction_Joystick = m_XRILeftHandInteraction.FindAction("Joystick", throwIfNotFound: true);
        // XRI RightHand
        m_XRIRightHand = asset.FindActionMap("XRI RightHand", throwIfNotFound: true);
        m_XRIRightHand_Position = m_XRIRightHand.FindAction("Position", throwIfNotFound: true);
        m_XRIRightHand_Rotation = m_XRIRightHand.FindAction("Rotation", throwIfNotFound: true);
        m_XRIRightHand_TrackingState = m_XRIRightHand.FindAction("Tracking State", throwIfNotFound: true);
        m_XRIRightHand_HapticDevice = m_XRIRightHand.FindAction("Haptic Device", throwIfNotFound: true);
        // XRI RightHand Interaction
        m_XRIRightHandInteraction = asset.FindActionMap("XRI RightHand Interaction", throwIfNotFound: true);
        m_XRIRightHandInteraction_Select = m_XRIRightHandInteraction.FindAction("Select", throwIfNotFound: true);
        m_XRIRightHandInteraction_SelectValue = m_XRIRightHandInteraction.FindAction("Select Value", throwIfNotFound: true);
        m_XRIRightHandInteraction_Activate = m_XRIRightHandInteraction.FindAction("Activate", throwIfNotFound: true);
        m_XRIRightHandInteraction_ActivateValue = m_XRIRightHandInteraction.FindAction("Activate Value", throwIfNotFound: true);
        m_XRIRightHandInteraction_UIPress = m_XRIRightHandInteraction.FindAction("UI Press", throwIfNotFound: true);
        m_XRIRightHandInteraction_UIPressValue = m_XRIRightHandInteraction.FindAction("UI Press Value", throwIfNotFound: true);
        m_XRIRightHandInteraction_RotateAnchor = m_XRIRightHandInteraction.FindAction("Rotate Anchor", throwIfNotFound: true);
        m_XRIRightHandInteraction_TranslateAnchor = m_XRIRightHandInteraction.FindAction("Translate Anchor", throwIfNotFound: true);
        m_XRIRightHandInteraction_Trigger = m_XRIRightHandInteraction.FindAction("Trigger", throwIfNotFound: true);
        m_XRIRightHandInteraction_Grip = m_XRIRightHandInteraction.FindAction("Grip", throwIfNotFound: true);
        m_XRIRightHandInteraction_AButton = m_XRIRightHandInteraction.FindAction("AButton", throwIfNotFound: true);
        m_XRIRightHandInteraction_BButton = m_XRIRightHandInteraction.FindAction("BButton", throwIfNotFound: true);
        m_XRIRightHandInteraction_Joystick = m_XRIRightHandInteraction.FindAction("Joystick", throwIfNotFound: true);
        // XRI Generic Interaction
        m_XRIGenericInteraction = asset.FindActionMap("XRI Generic Interaction", throwIfNotFound: true);
        m_XRIGenericInteraction_RightStickPress = m_XRIGenericInteraction.FindAction("RightStickPress", throwIfNotFound: true);
        m_XRIGenericInteraction_RightStick = m_XRIGenericInteraction.FindAction("RightStick", throwIfNotFound: true);
        // XRI UI
        m_XRIUI = asset.FindActionMap("XRI UI", throwIfNotFound: true);
        m_XRIUI_Navigate = m_XRIUI.FindAction("Navigate", throwIfNotFound: true);
        m_XRIUI_Submit = m_XRIUI.FindAction("Submit", throwIfNotFound: true);
        m_XRIUI_Cancel = m_XRIUI.FindAction("Cancel", throwIfNotFound: true);
        m_XRIUI_Point = m_XRIUI.FindAction("Point", throwIfNotFound: true);
        m_XRIUI_Click = m_XRIUI.FindAction("Click", throwIfNotFound: true);
        m_XRIUI_ScrollWheel = m_XRIUI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_XRIUI_MiddleClick = m_XRIUI.FindAction("MiddleClick", throwIfNotFound: true);
        m_XRIUI_RightClick = m_XRIUI.FindAction("RightClick", throwIfNotFound: true);
        // Spectator
        m_Spectator = asset.FindActionMap("Spectator", throwIfNotFound: true);
        m_Spectator_MouseDelta = m_Spectator.FindAction("MouseDelta", throwIfNotFound: true);
        m_Spectator_Scroll = m_Spectator.FindAction("Scroll", throwIfNotFound: true);
        m_Spectator_LeftMouseButton = m_Spectator.FindAction("LeftMouseButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // XRI Head
    private readonly InputActionMap m_XRIHead;
    private List<IXRIHeadActions> m_XRIHeadActionsCallbackInterfaces = new List<IXRIHeadActions>();
    private readonly InputAction m_XRIHead_Position;
    private readonly InputAction m_XRIHead_Rotation;
    public struct XRIHeadActions
    {
        private @HotteInputActions m_Wrapper;
        public XRIHeadActions(@HotteInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_XRIHead_Position;
        public InputAction @Rotation => m_Wrapper.m_XRIHead_Rotation;
        public InputActionMap Get() { return m_Wrapper.m_XRIHead; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRIHeadActions set) { return set.Get(); }
        public void AddCallbacks(IXRIHeadActions instance)
        {
            if (instance == null || m_Wrapper.m_XRIHeadActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRIHeadActionsCallbackInterfaces.Add(instance);
            @Position.started += instance.OnPosition;
            @Position.performed += instance.OnPosition;
            @Position.canceled += instance.OnPosition;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
        }

        private void UnregisterCallbacks(IXRIHeadActions instance)
        {
            @Position.started -= instance.OnPosition;
            @Position.performed -= instance.OnPosition;
            @Position.canceled -= instance.OnPosition;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
        }

        public void RemoveCallbacks(IXRIHeadActions instance)
        {
            if (m_Wrapper.m_XRIHeadActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRIHeadActions instance)
        {
            foreach (var item in m_Wrapper.m_XRIHeadActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRIHeadActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRIHeadActions @XRIHead => new XRIHeadActions(this);

    // XRI LeftHand
    private readonly InputActionMap m_XRILeftHand;
    private List<IXRILeftHandActions> m_XRILeftHandActionsCallbackInterfaces = new List<IXRILeftHandActions>();
    private readonly InputAction m_XRILeftHand_Position;
    private readonly InputAction m_XRILeftHand_Menu;
    private readonly InputAction m_XRILeftHand_Rotation;
    private readonly InputAction m_XRILeftHand_TrackingState;
    private readonly InputAction m_XRILeftHand_HapticDevice;
    public struct XRILeftHandActions
    {
        private @HotteInputActions m_Wrapper;
        public XRILeftHandActions(@HotteInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_XRILeftHand_Position;
        public InputAction @Menu => m_Wrapper.m_XRILeftHand_Menu;
        public InputAction @Rotation => m_Wrapper.m_XRILeftHand_Rotation;
        public InputAction @TrackingState => m_Wrapper.m_XRILeftHand_TrackingState;
        public InputAction @HapticDevice => m_Wrapper.m_XRILeftHand_HapticDevice;
        public InputActionMap Get() { return m_Wrapper.m_XRILeftHand; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRILeftHandActions set) { return set.Get(); }
        public void AddCallbacks(IXRILeftHandActions instance)
        {
            if (instance == null || m_Wrapper.m_XRILeftHandActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRILeftHandActionsCallbackInterfaces.Add(instance);
            @Position.started += instance.OnPosition;
            @Position.performed += instance.OnPosition;
            @Position.canceled += instance.OnPosition;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @TrackingState.started += instance.OnTrackingState;
            @TrackingState.performed += instance.OnTrackingState;
            @TrackingState.canceled += instance.OnTrackingState;
            @HapticDevice.started += instance.OnHapticDevice;
            @HapticDevice.performed += instance.OnHapticDevice;
            @HapticDevice.canceled += instance.OnHapticDevice;
        }

        private void UnregisterCallbacks(IXRILeftHandActions instance)
        {
            @Position.started -= instance.OnPosition;
            @Position.performed -= instance.OnPosition;
            @Position.canceled -= instance.OnPosition;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @TrackingState.started -= instance.OnTrackingState;
            @TrackingState.performed -= instance.OnTrackingState;
            @TrackingState.canceled -= instance.OnTrackingState;
            @HapticDevice.started -= instance.OnHapticDevice;
            @HapticDevice.performed -= instance.OnHapticDevice;
            @HapticDevice.canceled -= instance.OnHapticDevice;
        }

        public void RemoveCallbacks(IXRILeftHandActions instance)
        {
            if (m_Wrapper.m_XRILeftHandActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRILeftHandActions instance)
        {
            foreach (var item in m_Wrapper.m_XRILeftHandActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRILeftHandActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRILeftHandActions @XRILeftHand => new XRILeftHandActions(this);

    // XRI LeftHand Interaction
    private readonly InputActionMap m_XRILeftHandInteraction;
    private List<IXRILeftHandInteractionActions> m_XRILeftHandInteractionActionsCallbackInterfaces = new List<IXRILeftHandInteractionActions>();
    private readonly InputAction m_XRILeftHandInteraction_Select;
    private readonly InputAction m_XRILeftHandInteraction_SelectValue;
    private readonly InputAction m_XRILeftHandInteraction_Activate;
    private readonly InputAction m_XRILeftHandInteraction_ActivateValue;
    private readonly InputAction m_XRILeftHandInteraction_UIPress;
    private readonly InputAction m_XRILeftHandInteraction_UIPressValue;
    private readonly InputAction m_XRILeftHandInteraction_RotateAnchor;
    private readonly InputAction m_XRILeftHandInteraction_TranslateAnchor;
    private readonly InputAction m_XRILeftHandInteraction_Trigger;
    private readonly InputAction m_XRILeftHandInteraction_Grip;
    private readonly InputAction m_XRILeftHandInteraction_AButton;
    private readonly InputAction m_XRILeftHandInteraction_BButton;
    private readonly InputAction m_XRILeftHandInteraction_Joystick;
    public struct XRILeftHandInteractionActions
    {
        private @HotteInputActions m_Wrapper;
        public XRILeftHandInteractionActions(@HotteInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Select => m_Wrapper.m_XRILeftHandInteraction_Select;
        public InputAction @SelectValue => m_Wrapper.m_XRILeftHandInteraction_SelectValue;
        public InputAction @Activate => m_Wrapper.m_XRILeftHandInteraction_Activate;
        public InputAction @ActivateValue => m_Wrapper.m_XRILeftHandInteraction_ActivateValue;
        public InputAction @UIPress => m_Wrapper.m_XRILeftHandInteraction_UIPress;
        public InputAction @UIPressValue => m_Wrapper.m_XRILeftHandInteraction_UIPressValue;
        public InputAction @RotateAnchor => m_Wrapper.m_XRILeftHandInteraction_RotateAnchor;
        public InputAction @TranslateAnchor => m_Wrapper.m_XRILeftHandInteraction_TranslateAnchor;
        public InputAction @Trigger => m_Wrapper.m_XRILeftHandInteraction_Trigger;
        public InputAction @Grip => m_Wrapper.m_XRILeftHandInteraction_Grip;
        public InputAction @AButton => m_Wrapper.m_XRILeftHandInteraction_AButton;
        public InputAction @BButton => m_Wrapper.m_XRILeftHandInteraction_BButton;
        public InputAction @Joystick => m_Wrapper.m_XRILeftHandInteraction_Joystick;
        public InputActionMap Get() { return m_Wrapper.m_XRILeftHandInteraction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRILeftHandInteractionActions set) { return set.Get(); }
        public void AddCallbacks(IXRILeftHandInteractionActions instance)
        {
            if (instance == null || m_Wrapper.m_XRILeftHandInteractionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRILeftHandInteractionActionsCallbackInterfaces.Add(instance);
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @SelectValue.started += instance.OnSelectValue;
            @SelectValue.performed += instance.OnSelectValue;
            @SelectValue.canceled += instance.OnSelectValue;
            @Activate.started += instance.OnActivate;
            @Activate.performed += instance.OnActivate;
            @Activate.canceled += instance.OnActivate;
            @ActivateValue.started += instance.OnActivateValue;
            @ActivateValue.performed += instance.OnActivateValue;
            @ActivateValue.canceled += instance.OnActivateValue;
            @UIPress.started += instance.OnUIPress;
            @UIPress.performed += instance.OnUIPress;
            @UIPress.canceled += instance.OnUIPress;
            @UIPressValue.started += instance.OnUIPressValue;
            @UIPressValue.performed += instance.OnUIPressValue;
            @UIPressValue.canceled += instance.OnUIPressValue;
            @RotateAnchor.started += instance.OnRotateAnchor;
            @RotateAnchor.performed += instance.OnRotateAnchor;
            @RotateAnchor.canceled += instance.OnRotateAnchor;
            @TranslateAnchor.started += instance.OnTranslateAnchor;
            @TranslateAnchor.performed += instance.OnTranslateAnchor;
            @TranslateAnchor.canceled += instance.OnTranslateAnchor;
            @Trigger.started += instance.OnTrigger;
            @Trigger.performed += instance.OnTrigger;
            @Trigger.canceled += instance.OnTrigger;
            @Grip.started += instance.OnGrip;
            @Grip.performed += instance.OnGrip;
            @Grip.canceled += instance.OnGrip;
            @AButton.started += instance.OnAButton;
            @AButton.performed += instance.OnAButton;
            @AButton.canceled += instance.OnAButton;
            @BButton.started += instance.OnBButton;
            @BButton.performed += instance.OnBButton;
            @BButton.canceled += instance.OnBButton;
            @Joystick.started += instance.OnJoystick;
            @Joystick.performed += instance.OnJoystick;
            @Joystick.canceled += instance.OnJoystick;
        }

        private void UnregisterCallbacks(IXRILeftHandInteractionActions instance)
        {
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @SelectValue.started -= instance.OnSelectValue;
            @SelectValue.performed -= instance.OnSelectValue;
            @SelectValue.canceled -= instance.OnSelectValue;
            @Activate.started -= instance.OnActivate;
            @Activate.performed -= instance.OnActivate;
            @Activate.canceled -= instance.OnActivate;
            @ActivateValue.started -= instance.OnActivateValue;
            @ActivateValue.performed -= instance.OnActivateValue;
            @ActivateValue.canceled -= instance.OnActivateValue;
            @UIPress.started -= instance.OnUIPress;
            @UIPress.performed -= instance.OnUIPress;
            @UIPress.canceled -= instance.OnUIPress;
            @UIPressValue.started -= instance.OnUIPressValue;
            @UIPressValue.performed -= instance.OnUIPressValue;
            @UIPressValue.canceled -= instance.OnUIPressValue;
            @RotateAnchor.started -= instance.OnRotateAnchor;
            @RotateAnchor.performed -= instance.OnRotateAnchor;
            @RotateAnchor.canceled -= instance.OnRotateAnchor;
            @TranslateAnchor.started -= instance.OnTranslateAnchor;
            @TranslateAnchor.performed -= instance.OnTranslateAnchor;
            @TranslateAnchor.canceled -= instance.OnTranslateAnchor;
            @Trigger.started -= instance.OnTrigger;
            @Trigger.performed -= instance.OnTrigger;
            @Trigger.canceled -= instance.OnTrigger;
            @Grip.started -= instance.OnGrip;
            @Grip.performed -= instance.OnGrip;
            @Grip.canceled -= instance.OnGrip;
            @AButton.started -= instance.OnAButton;
            @AButton.performed -= instance.OnAButton;
            @AButton.canceled -= instance.OnAButton;
            @BButton.started -= instance.OnBButton;
            @BButton.performed -= instance.OnBButton;
            @BButton.canceled -= instance.OnBButton;
            @Joystick.started -= instance.OnJoystick;
            @Joystick.performed -= instance.OnJoystick;
            @Joystick.canceled -= instance.OnJoystick;
        }

        public void RemoveCallbacks(IXRILeftHandInteractionActions instance)
        {
            if (m_Wrapper.m_XRILeftHandInteractionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRILeftHandInteractionActions instance)
        {
            foreach (var item in m_Wrapper.m_XRILeftHandInteractionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRILeftHandInteractionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRILeftHandInteractionActions @XRILeftHandInteraction => new XRILeftHandInteractionActions(this);

    // XRI RightHand
    private readonly InputActionMap m_XRIRightHand;
    private List<IXRIRightHandActions> m_XRIRightHandActionsCallbackInterfaces = new List<IXRIRightHandActions>();
    private readonly InputAction m_XRIRightHand_Position;
    private readonly InputAction m_XRIRightHand_Rotation;
    private readonly InputAction m_XRIRightHand_TrackingState;
    private readonly InputAction m_XRIRightHand_HapticDevice;
    public struct XRIRightHandActions
    {
        private @HotteInputActions m_Wrapper;
        public XRIRightHandActions(@HotteInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_XRIRightHand_Position;
        public InputAction @Rotation => m_Wrapper.m_XRIRightHand_Rotation;
        public InputAction @TrackingState => m_Wrapper.m_XRIRightHand_TrackingState;
        public InputAction @HapticDevice => m_Wrapper.m_XRIRightHand_HapticDevice;
        public InputActionMap Get() { return m_Wrapper.m_XRIRightHand; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRIRightHandActions set) { return set.Get(); }
        public void AddCallbacks(IXRIRightHandActions instance)
        {
            if (instance == null || m_Wrapper.m_XRIRightHandActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRIRightHandActionsCallbackInterfaces.Add(instance);
            @Position.started += instance.OnPosition;
            @Position.performed += instance.OnPosition;
            @Position.canceled += instance.OnPosition;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @TrackingState.started += instance.OnTrackingState;
            @TrackingState.performed += instance.OnTrackingState;
            @TrackingState.canceled += instance.OnTrackingState;
            @HapticDevice.started += instance.OnHapticDevice;
            @HapticDevice.performed += instance.OnHapticDevice;
            @HapticDevice.canceled += instance.OnHapticDevice;
        }

        private void UnregisterCallbacks(IXRIRightHandActions instance)
        {
            @Position.started -= instance.OnPosition;
            @Position.performed -= instance.OnPosition;
            @Position.canceled -= instance.OnPosition;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @TrackingState.started -= instance.OnTrackingState;
            @TrackingState.performed -= instance.OnTrackingState;
            @TrackingState.canceled -= instance.OnTrackingState;
            @HapticDevice.started -= instance.OnHapticDevice;
            @HapticDevice.performed -= instance.OnHapticDevice;
            @HapticDevice.canceled -= instance.OnHapticDevice;
        }

        public void RemoveCallbacks(IXRIRightHandActions instance)
        {
            if (m_Wrapper.m_XRIRightHandActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRIRightHandActions instance)
        {
            foreach (var item in m_Wrapper.m_XRIRightHandActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRIRightHandActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRIRightHandActions @XRIRightHand => new XRIRightHandActions(this);

    // XRI RightHand Interaction
    private readonly InputActionMap m_XRIRightHandInteraction;
    private List<IXRIRightHandInteractionActions> m_XRIRightHandInteractionActionsCallbackInterfaces = new List<IXRIRightHandInteractionActions>();
    private readonly InputAction m_XRIRightHandInteraction_Select;
    private readonly InputAction m_XRIRightHandInteraction_SelectValue;
    private readonly InputAction m_XRIRightHandInteraction_Activate;
    private readonly InputAction m_XRIRightHandInteraction_ActivateValue;
    private readonly InputAction m_XRIRightHandInteraction_UIPress;
    private readonly InputAction m_XRIRightHandInteraction_UIPressValue;
    private readonly InputAction m_XRIRightHandInteraction_RotateAnchor;
    private readonly InputAction m_XRIRightHandInteraction_TranslateAnchor;
    private readonly InputAction m_XRIRightHandInteraction_Trigger;
    private readonly InputAction m_XRIRightHandInteraction_Grip;
    private readonly InputAction m_XRIRightHandInteraction_AButton;
    private readonly InputAction m_XRIRightHandInteraction_BButton;
    private readonly InputAction m_XRIRightHandInteraction_Joystick;
    public struct XRIRightHandInteractionActions
    {
        private @HotteInputActions m_Wrapper;
        public XRIRightHandInteractionActions(@HotteInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Select => m_Wrapper.m_XRIRightHandInteraction_Select;
        public InputAction @SelectValue => m_Wrapper.m_XRIRightHandInteraction_SelectValue;
        public InputAction @Activate => m_Wrapper.m_XRIRightHandInteraction_Activate;
        public InputAction @ActivateValue => m_Wrapper.m_XRIRightHandInteraction_ActivateValue;
        public InputAction @UIPress => m_Wrapper.m_XRIRightHandInteraction_UIPress;
        public InputAction @UIPressValue => m_Wrapper.m_XRIRightHandInteraction_UIPressValue;
        public InputAction @RotateAnchor => m_Wrapper.m_XRIRightHandInteraction_RotateAnchor;
        public InputAction @TranslateAnchor => m_Wrapper.m_XRIRightHandInteraction_TranslateAnchor;
        public InputAction @Trigger => m_Wrapper.m_XRIRightHandInteraction_Trigger;
        public InputAction @Grip => m_Wrapper.m_XRIRightHandInteraction_Grip;
        public InputAction @AButton => m_Wrapper.m_XRIRightHandInteraction_AButton;
        public InputAction @BButton => m_Wrapper.m_XRIRightHandInteraction_BButton;
        public InputAction @Joystick => m_Wrapper.m_XRIRightHandInteraction_Joystick;
        public InputActionMap Get() { return m_Wrapper.m_XRIRightHandInteraction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRIRightHandInteractionActions set) { return set.Get(); }
        public void AddCallbacks(IXRIRightHandInteractionActions instance)
        {
            if (instance == null || m_Wrapper.m_XRIRightHandInteractionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRIRightHandInteractionActionsCallbackInterfaces.Add(instance);
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @SelectValue.started += instance.OnSelectValue;
            @SelectValue.performed += instance.OnSelectValue;
            @SelectValue.canceled += instance.OnSelectValue;
            @Activate.started += instance.OnActivate;
            @Activate.performed += instance.OnActivate;
            @Activate.canceled += instance.OnActivate;
            @ActivateValue.started += instance.OnActivateValue;
            @ActivateValue.performed += instance.OnActivateValue;
            @ActivateValue.canceled += instance.OnActivateValue;
            @UIPress.started += instance.OnUIPress;
            @UIPress.performed += instance.OnUIPress;
            @UIPress.canceled += instance.OnUIPress;
            @UIPressValue.started += instance.OnUIPressValue;
            @UIPressValue.performed += instance.OnUIPressValue;
            @UIPressValue.canceled += instance.OnUIPressValue;
            @RotateAnchor.started += instance.OnRotateAnchor;
            @RotateAnchor.performed += instance.OnRotateAnchor;
            @RotateAnchor.canceled += instance.OnRotateAnchor;
            @TranslateAnchor.started += instance.OnTranslateAnchor;
            @TranslateAnchor.performed += instance.OnTranslateAnchor;
            @TranslateAnchor.canceled += instance.OnTranslateAnchor;
            @Trigger.started += instance.OnTrigger;
            @Trigger.performed += instance.OnTrigger;
            @Trigger.canceled += instance.OnTrigger;
            @Grip.started += instance.OnGrip;
            @Grip.performed += instance.OnGrip;
            @Grip.canceled += instance.OnGrip;
            @AButton.started += instance.OnAButton;
            @AButton.performed += instance.OnAButton;
            @AButton.canceled += instance.OnAButton;
            @BButton.started += instance.OnBButton;
            @BButton.performed += instance.OnBButton;
            @BButton.canceled += instance.OnBButton;
            @Joystick.started += instance.OnJoystick;
            @Joystick.performed += instance.OnJoystick;
            @Joystick.canceled += instance.OnJoystick;
        }

        private void UnregisterCallbacks(IXRIRightHandInteractionActions instance)
        {
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @SelectValue.started -= instance.OnSelectValue;
            @SelectValue.performed -= instance.OnSelectValue;
            @SelectValue.canceled -= instance.OnSelectValue;
            @Activate.started -= instance.OnActivate;
            @Activate.performed -= instance.OnActivate;
            @Activate.canceled -= instance.OnActivate;
            @ActivateValue.started -= instance.OnActivateValue;
            @ActivateValue.performed -= instance.OnActivateValue;
            @ActivateValue.canceled -= instance.OnActivateValue;
            @UIPress.started -= instance.OnUIPress;
            @UIPress.performed -= instance.OnUIPress;
            @UIPress.canceled -= instance.OnUIPress;
            @UIPressValue.started -= instance.OnUIPressValue;
            @UIPressValue.performed -= instance.OnUIPressValue;
            @UIPressValue.canceled -= instance.OnUIPressValue;
            @RotateAnchor.started -= instance.OnRotateAnchor;
            @RotateAnchor.performed -= instance.OnRotateAnchor;
            @RotateAnchor.canceled -= instance.OnRotateAnchor;
            @TranslateAnchor.started -= instance.OnTranslateAnchor;
            @TranslateAnchor.performed -= instance.OnTranslateAnchor;
            @TranslateAnchor.canceled -= instance.OnTranslateAnchor;
            @Trigger.started -= instance.OnTrigger;
            @Trigger.performed -= instance.OnTrigger;
            @Trigger.canceled -= instance.OnTrigger;
            @Grip.started -= instance.OnGrip;
            @Grip.performed -= instance.OnGrip;
            @Grip.canceled -= instance.OnGrip;
            @AButton.started -= instance.OnAButton;
            @AButton.performed -= instance.OnAButton;
            @AButton.canceled -= instance.OnAButton;
            @BButton.started -= instance.OnBButton;
            @BButton.performed -= instance.OnBButton;
            @BButton.canceled -= instance.OnBButton;
            @Joystick.started -= instance.OnJoystick;
            @Joystick.performed -= instance.OnJoystick;
            @Joystick.canceled -= instance.OnJoystick;
        }

        public void RemoveCallbacks(IXRIRightHandInteractionActions instance)
        {
            if (m_Wrapper.m_XRIRightHandInteractionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRIRightHandInteractionActions instance)
        {
            foreach (var item in m_Wrapper.m_XRIRightHandInteractionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRIRightHandInteractionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRIRightHandInteractionActions @XRIRightHandInteraction => new XRIRightHandInteractionActions(this);

    // XRI Generic Interaction
    private readonly InputActionMap m_XRIGenericInteraction;
    private List<IXRIGenericInteractionActions> m_XRIGenericInteractionActionsCallbackInterfaces = new List<IXRIGenericInteractionActions>();
    private readonly InputAction m_XRIGenericInteraction_RightStickPress;
    private readonly InputAction m_XRIGenericInteraction_RightStick;
    public struct XRIGenericInteractionActions
    {
        private @HotteInputActions m_Wrapper;
        public XRIGenericInteractionActions(@HotteInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @RightStickPress => m_Wrapper.m_XRIGenericInteraction_RightStickPress;
        public InputAction @RightStick => m_Wrapper.m_XRIGenericInteraction_RightStick;
        public InputActionMap Get() { return m_Wrapper.m_XRIGenericInteraction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRIGenericInteractionActions set) { return set.Get(); }
        public void AddCallbacks(IXRIGenericInteractionActions instance)
        {
            if (instance == null || m_Wrapper.m_XRIGenericInteractionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRIGenericInteractionActionsCallbackInterfaces.Add(instance);
            @RightStickPress.started += instance.OnRightStickPress;
            @RightStickPress.performed += instance.OnRightStickPress;
            @RightStickPress.canceled += instance.OnRightStickPress;
            @RightStick.started += instance.OnRightStick;
            @RightStick.performed += instance.OnRightStick;
            @RightStick.canceled += instance.OnRightStick;
        }

        private void UnregisterCallbacks(IXRIGenericInteractionActions instance)
        {
            @RightStickPress.started -= instance.OnRightStickPress;
            @RightStickPress.performed -= instance.OnRightStickPress;
            @RightStickPress.canceled -= instance.OnRightStickPress;
            @RightStick.started -= instance.OnRightStick;
            @RightStick.performed -= instance.OnRightStick;
            @RightStick.canceled -= instance.OnRightStick;
        }

        public void RemoveCallbacks(IXRIGenericInteractionActions instance)
        {
            if (m_Wrapper.m_XRIGenericInteractionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRIGenericInteractionActions instance)
        {
            foreach (var item in m_Wrapper.m_XRIGenericInteractionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRIGenericInteractionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRIGenericInteractionActions @XRIGenericInteraction => new XRIGenericInteractionActions(this);

    // XRI UI
    private readonly InputActionMap m_XRIUI;
    private List<IXRIUIActions> m_XRIUIActionsCallbackInterfaces = new List<IXRIUIActions>();
    private readonly InputAction m_XRIUI_Navigate;
    private readonly InputAction m_XRIUI_Submit;
    private readonly InputAction m_XRIUI_Cancel;
    private readonly InputAction m_XRIUI_Point;
    private readonly InputAction m_XRIUI_Click;
    private readonly InputAction m_XRIUI_ScrollWheel;
    private readonly InputAction m_XRIUI_MiddleClick;
    private readonly InputAction m_XRIUI_RightClick;
    public struct XRIUIActions
    {
        private @HotteInputActions m_Wrapper;
        public XRIUIActions(@HotteInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_XRIUI_Navigate;
        public InputAction @Submit => m_Wrapper.m_XRIUI_Submit;
        public InputAction @Cancel => m_Wrapper.m_XRIUI_Cancel;
        public InputAction @Point => m_Wrapper.m_XRIUI_Point;
        public InputAction @Click => m_Wrapper.m_XRIUI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_XRIUI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_XRIUI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_XRIUI_RightClick;
        public InputActionMap Get() { return m_Wrapper.m_XRIUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRIUIActions set) { return set.Get(); }
        public void AddCallbacks(IXRIUIActions instance)
        {
            if (instance == null || m_Wrapper.m_XRIUIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRIUIActionsCallbackInterfaces.Add(instance);
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @ScrollWheel.started += instance.OnScrollWheel;
            @ScrollWheel.performed += instance.OnScrollWheel;
            @ScrollWheel.canceled += instance.OnScrollWheel;
            @MiddleClick.started += instance.OnMiddleClick;
            @MiddleClick.performed += instance.OnMiddleClick;
            @MiddleClick.canceled += instance.OnMiddleClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
        }

        private void UnregisterCallbacks(IXRIUIActions instance)
        {
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @ScrollWheel.started -= instance.OnScrollWheel;
            @ScrollWheel.performed -= instance.OnScrollWheel;
            @ScrollWheel.canceled -= instance.OnScrollWheel;
            @MiddleClick.started -= instance.OnMiddleClick;
            @MiddleClick.performed -= instance.OnMiddleClick;
            @MiddleClick.canceled -= instance.OnMiddleClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
        }

        public void RemoveCallbacks(IXRIUIActions instance)
        {
            if (m_Wrapper.m_XRIUIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRIUIActions instance)
        {
            foreach (var item in m_Wrapper.m_XRIUIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRIUIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRIUIActions @XRIUI => new XRIUIActions(this);

    // Spectator
    private readonly InputActionMap m_Spectator;
    private List<ISpectatorActions> m_SpectatorActionsCallbackInterfaces = new List<ISpectatorActions>();
    private readonly InputAction m_Spectator_MouseDelta;
    private readonly InputAction m_Spectator_Scroll;
    private readonly InputAction m_Spectator_LeftMouseButton;
    public struct SpectatorActions
    {
        private @HotteInputActions m_Wrapper;
        public SpectatorActions(@HotteInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseDelta => m_Wrapper.m_Spectator_MouseDelta;
        public InputAction @Scroll => m_Wrapper.m_Spectator_Scroll;
        public InputAction @LeftMouseButton => m_Wrapper.m_Spectator_LeftMouseButton;
        public InputActionMap Get() { return m_Wrapper.m_Spectator; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpectatorActions set) { return set.Get(); }
        public void AddCallbacks(ISpectatorActions instance)
        {
            if (instance == null || m_Wrapper.m_SpectatorActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SpectatorActionsCallbackInterfaces.Add(instance);
            @MouseDelta.started += instance.OnMouseDelta;
            @MouseDelta.performed += instance.OnMouseDelta;
            @MouseDelta.canceled += instance.OnMouseDelta;
            @Scroll.started += instance.OnScroll;
            @Scroll.performed += instance.OnScroll;
            @Scroll.canceled += instance.OnScroll;
            @LeftMouseButton.started += instance.OnLeftMouseButton;
            @LeftMouseButton.performed += instance.OnLeftMouseButton;
            @LeftMouseButton.canceled += instance.OnLeftMouseButton;
        }

        private void UnregisterCallbacks(ISpectatorActions instance)
        {
            @MouseDelta.started -= instance.OnMouseDelta;
            @MouseDelta.performed -= instance.OnMouseDelta;
            @MouseDelta.canceled -= instance.OnMouseDelta;
            @Scroll.started -= instance.OnScroll;
            @Scroll.performed -= instance.OnScroll;
            @Scroll.canceled -= instance.OnScroll;
            @LeftMouseButton.started -= instance.OnLeftMouseButton;
            @LeftMouseButton.performed -= instance.OnLeftMouseButton;
            @LeftMouseButton.canceled -= instance.OnLeftMouseButton;
        }

        public void RemoveCallbacks(ISpectatorActions instance)
        {
            if (m_Wrapper.m_SpectatorActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISpectatorActions instance)
        {
            foreach (var item in m_Wrapper.m_SpectatorActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SpectatorActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SpectatorActions @Spectator => new SpectatorActions(this);
    private int m_GenericXRControllerSchemeIndex = -1;
    public InputControlScheme GenericXRControllerScheme
    {
        get
        {
            if (m_GenericXRControllerSchemeIndex == -1) m_GenericXRControllerSchemeIndex = asset.FindControlSchemeIndex("Generic XR Controller");
            return asset.controlSchemes[m_GenericXRControllerSchemeIndex];
        }
    }
    private int m_ContinuousMoveSchemeIndex = -1;
    public InputControlScheme ContinuousMoveScheme
    {
        get
        {
            if (m_ContinuousMoveSchemeIndex == -1) m_ContinuousMoveSchemeIndex = asset.FindControlSchemeIndex("Continuous Move");
            return asset.controlSchemes[m_ContinuousMoveSchemeIndex];
        }
    }
    private int m_NoncontinuousMoveSchemeIndex = -1;
    public InputControlScheme NoncontinuousMoveScheme
    {
        get
        {
            if (m_NoncontinuousMoveSchemeIndex == -1) m_NoncontinuousMoveSchemeIndex = asset.FindControlSchemeIndex("Noncontinuous Move");
            return asset.controlSchemes[m_NoncontinuousMoveSchemeIndex];
        }
    }
    public interface IXRIHeadActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
    }
    public interface IXRILeftHandActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnHapticDevice(InputAction.CallbackContext context);
    }
    public interface IXRILeftHandInteractionActions
    {
        void OnSelect(InputAction.CallbackContext context);
        void OnSelectValue(InputAction.CallbackContext context);
        void OnActivate(InputAction.CallbackContext context);
        void OnActivateValue(InputAction.CallbackContext context);
        void OnUIPress(InputAction.CallbackContext context);
        void OnUIPressValue(InputAction.CallbackContext context);
        void OnRotateAnchor(InputAction.CallbackContext context);
        void OnTranslateAnchor(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnAButton(InputAction.CallbackContext context);
        void OnBButton(InputAction.CallbackContext context);
        void OnJoystick(InputAction.CallbackContext context);
    }
    public interface IXRIRightHandActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnHapticDevice(InputAction.CallbackContext context);
    }
    public interface IXRIRightHandInteractionActions
    {
        void OnSelect(InputAction.CallbackContext context);
        void OnSelectValue(InputAction.CallbackContext context);
        void OnActivate(InputAction.CallbackContext context);
        void OnActivateValue(InputAction.CallbackContext context);
        void OnUIPress(InputAction.CallbackContext context);
        void OnUIPressValue(InputAction.CallbackContext context);
        void OnRotateAnchor(InputAction.CallbackContext context);
        void OnTranslateAnchor(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnGrip(InputAction.CallbackContext context);
        void OnAButton(InputAction.CallbackContext context);
        void OnBButton(InputAction.CallbackContext context);
        void OnJoystick(InputAction.CallbackContext context);
    }
    public interface IXRIGenericInteractionActions
    {
        void OnRightStickPress(InputAction.CallbackContext context);
        void OnRightStick(InputAction.CallbackContext context);
    }
    public interface IXRIUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
    }
    public interface ISpectatorActions
    {
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
        void OnLeftMouseButton(InputAction.CallbackContext context);
    }
}
